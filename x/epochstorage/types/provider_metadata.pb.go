// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: lavanet/lava/epochstorage/provider_metadata.proto

package types

import (
	fmt "fmt"
	types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/cosmos/cosmos-sdk/types/tx/amino"
	types1 "github.com/cosmos/cosmos-sdk/x/staking/types"
	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/cosmos/gogoproto/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type ProviderMetadata struct {
	Provider           string             `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
	Vault              string             `protobuf:"bytes,2,opt,name=vault,proto3" json:"vault,omitempty"`
	TotalDelegations   types.Coin         `protobuf:"bytes,3,opt,name=total_delegations,json=totalDelegations,proto3" json:"total_delegations"`
	Chains             []string           `protobuf:"bytes,4,rep,name=chains,proto3" json:"chains,omitempty"`
	DelegateCommission uint64             `protobuf:"varint,5,opt,name=delegate_commission,json=delegateCommission,proto3" json:"delegate_commission,omitempty"`
	LastChange         uint64             `protobuf:"varint,6,opt,name=last_change,json=lastChange,proto3" json:"last_change,omitempty"`
	Description        types1.Description `protobuf:"bytes,7,opt,name=description,proto3" json:"description"`
}

func (m *ProviderMetadata) Reset()         { *m = ProviderMetadata{} }
func (m *ProviderMetadata) String() string { return proto.CompactTextString(m) }
func (*ProviderMetadata) ProtoMessage()    {}
func (*ProviderMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_eea88d8dbfad23fd, []int{0}
}
func (m *ProviderMetadata) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ProviderMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ProviderMetadata.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ProviderMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProviderMetadata.Merge(m, src)
}
func (m *ProviderMetadata) XXX_Size() int {
	return m.Size()
}
func (m *ProviderMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_ProviderMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_ProviderMetadata proto.InternalMessageInfo

func (m *ProviderMetadata) GetProvider() string {
	if m != nil {
		return m.Provider
	}
	return ""
}

func (m *ProviderMetadata) GetVault() string {
	if m != nil {
		return m.Vault
	}
	return ""
}

func (m *ProviderMetadata) GetTotalDelegations() types.Coin {
	if m != nil {
		return m.TotalDelegations
	}
	return types.Coin{}
}

func (m *ProviderMetadata) GetChains() []string {
	if m != nil {
		return m.Chains
	}
	return nil
}

func (m *ProviderMetadata) GetDelegateCommission() uint64 {
	if m != nil {
		return m.DelegateCommission
	}
	return 0
}

func (m *ProviderMetadata) GetLastChange() uint64 {
	if m != nil {
		return m.LastChange
	}
	return 0
}

func (m *ProviderMetadata) GetDescription() types1.Description {
	if m != nil {
		return m.Description
	}
	return types1.Description{}
}

func init() {
	proto.RegisterType((*ProviderMetadata)(nil), "lavanet.lava.epochstorage.ProviderMetadata")
}

func init() {
	proto.RegisterFile("lavanet/lava/epochstorage/provider_metadata.proto", fileDescriptor_eea88d8dbfad23fd)
}

var fileDescriptor_eea88d8dbfad23fd = []byte{
	// 402 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x92, 0xc1, 0x6e, 0xd3, 0x30,
	0x1c, 0xc6, 0xeb, 0xad, 0x2b, 0xd4, 0xbd, 0x6c, 0x66, 0x42, 0x59, 0x0f, 0x59, 0x05, 0x1c, 0x2a,
	0x0e, 0xb6, 0x0a, 0x3c, 0x41, 0xbb, 0x0b, 0x12, 0x48, 0x53, 0x8e, 0x5c, 0xaa, 0x7f, 0x1c, 0x2b,
	0xb1, 0x48, 0xfc, 0x8f, 0x62, 0x2f, 0x82, 0xb7, 0xe0, 0x31, 0x38, 0xf2, 0x18, 0x3b, 0xa1, 0x1d,
	0x39, 0x21, 0xd4, 0x1e, 0x78, 0x8d, 0x29, 0x8e, 0xd3, 0x6d, 0x97, 0x38, 0xdf, 0xff, 0xfb, 0x3e,
	0xe7, 0xa7, 0xd8, 0x74, 0x55, 0x42, 0x0b, 0x46, 0x39, 0xd1, 0xad, 0x42, 0xd5, 0x28, 0x0b, 0xeb,
	0xb0, 0x81, 0x5c, 0x89, 0xba, 0xc1, 0x56, 0x67, 0xaa, 0xd9, 0x56, 0xca, 0x41, 0x06, 0x0e, 0x78,
	0xdd, 0xa0, 0x43, 0x76, 0x11, 0x2a, 0xbc, 0x5b, 0xf9, 0xe3, 0xca, 0xfc, 0x3c, 0xc7, 0x1c, 0x7d,
	0x4a, 0x74, 0x6f, 0x7d, 0x61, 0x1e, 0x4b, 0xb4, 0x15, 0x5a, 0x91, 0x82, 0x55, 0xa2, 0x5d, 0xa5,
	0xca, 0xc1, 0x4a, 0x48, 0xd4, 0x26, 0xf8, 0x67, 0x50, 0x69, 0x83, 0xc2, 0x3f, 0xc3, 0xe8, 0x4d,
	0xa8, 0x58, 0x07, 0x5f, 0xb5, 0xc9, 0x0f, 0xad, 0xa0, 0xfb, 0xd4, 0xab, 0xdf, 0x47, 0xf4, 0xf4,
	0x3a, 0x50, 0x7e, 0x0e, 0x90, 0x6c, 0x4e, 0x9f, 0x0f, 0xe4, 0x11, 0x59, 0x90, 0xe5, 0x34, 0x39,
	0x68, 0x76, 0x4e, 0x4f, 0x5a, 0xb8, 0x29, 0x5d, 0x74, 0xe4, 0x8d, 0x5e, 0xb0, 0x4f, 0xf4, 0xcc,
	0xa1, 0x83, 0x72, 0x9b, 0xa9, 0x52, 0xe5, 0xe0, 0x34, 0x1a, 0x1b, 0x1d, 0x2f, 0xc8, 0x72, 0xf6,
	0xee, 0x82, 0xf7, 0x20, 0xbc, 0x63, 0xe7, 0x81, 0x82, 0x6f, 0x50, 0x9b, 0xf5, 0xf8, 0xf6, 0xef,
	0xe5, 0x28, 0x39, 0xf5, 0xcd, 0xab, 0x87, 0x22, 0x7b, 0x49, 0x27, 0xb2, 0x00, 0x6d, 0x6c, 0x34,
	0x5e, 0x1c, 0x2f, 0xa7, 0x49, 0x50, 0x4c, 0xd0, 0x17, 0x61, 0x7f, 0xb5, 0x95, 0x58, 0x55, 0xda,
	0x5a, 0x8d, 0x26, 0x3a, 0x59, 0x90, 0xe5, 0x38, 0x61, 0x83, 0xb5, 0x39, 0x38, 0xec, 0x92, 0xce,
	0x4a, 0xb0, 0x6e, 0x2b, 0x0b, 0x30, 0xb9, 0x8a, 0x26, 0x3e, 0x48, 0xbb, 0xd1, 0xc6, 0x4f, 0xd8,
	0x35, 0x9d, 0x65, 0xca, 0xca, 0x46, 0xd7, 0xdd, 0x97, 0xa3, 0x67, 0x9e, 0xf8, 0xf5, 0x40, 0x3c,
	0xfc, 0xaa, 0x01, 0xfa, 0xea, 0x21, 0xba, 0x9e, 0x76, 0xec, 0x3f, 0xff, 0xff, 0x7a, 0x4b, 0x92,
	0xc7, 0x5b, 0xac, 0x3f, 0xde, 0xee, 0x62, 0x72, 0xb7, 0x8b, 0xc9, 0xbf, 0x5d, 0x4c, 0x7e, 0xec,
	0xe3, 0xd1, 0xdd, 0x3e, 0x1e, 0xfd, 0xd9, 0xc7, 0xa3, 0x2f, 0x22, 0xd7, 0xae, 0xb8, 0x49, 0xb9,
	0xc4, 0x4a, 0x3c, 0xb9, 0x32, 0xed, 0x07, 0xf1, 0xed, 0xe9, 0xbd, 0x71, 0xdf, 0x6b, 0x65, 0xd3,
	0x89, 0x3f, 0xa2, 0xf7, 0xf7, 0x01, 0x00, 0x00, 0xff, 0xff, 0x46, 0xa9, 0x12, 0xb3, 0x61, 0x02,
	0x00, 0x00,
}

func (m *ProviderMetadata) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ProviderMetadata) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ProviderMetadata) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Description.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintProviderMetadata(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x3a
	if m.LastChange != 0 {
		i = encodeVarintProviderMetadata(dAtA, i, uint64(m.LastChange))
		i--
		dAtA[i] = 0x30
	}
	if m.DelegateCommission != 0 {
		i = encodeVarintProviderMetadata(dAtA, i, uint64(m.DelegateCommission))
		i--
		dAtA[i] = 0x28
	}
	if len(m.Chains) > 0 {
		for iNdEx := len(m.Chains) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Chains[iNdEx])
			copy(dAtA[i:], m.Chains[iNdEx])
			i = encodeVarintProviderMetadata(dAtA, i, uint64(len(m.Chains[iNdEx])))
			i--
			dAtA[i] = 0x22
		}
	}
	{
		size, err := m.TotalDelegations.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintProviderMetadata(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1a
	if len(m.Vault) > 0 {
		i -= len(m.Vault)
		copy(dAtA[i:], m.Vault)
		i = encodeVarintProviderMetadata(dAtA, i, uint64(len(m.Vault)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Provider) > 0 {
		i -= len(m.Provider)
		copy(dAtA[i:], m.Provider)
		i = encodeVarintProviderMetadata(dAtA, i, uint64(len(m.Provider)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintProviderMetadata(dAtA []byte, offset int, v uint64) int {
	offset -= sovProviderMetadata(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *ProviderMetadata) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Provider)
	if l > 0 {
		n += 1 + l + sovProviderMetadata(uint64(l))
	}
	l = len(m.Vault)
	if l > 0 {
		n += 1 + l + sovProviderMetadata(uint64(l))
	}
	l = m.TotalDelegations.Size()
	n += 1 + l + sovProviderMetadata(uint64(l))
	if len(m.Chains) > 0 {
		for _, s := range m.Chains {
			l = len(s)
			n += 1 + l + sovProviderMetadata(uint64(l))
		}
	}
	if m.DelegateCommission != 0 {
		n += 1 + sovProviderMetadata(uint64(m.DelegateCommission))
	}
	if m.LastChange != 0 {
		n += 1 + sovProviderMetadata(uint64(m.LastChange))
	}
	l = m.Description.Size()
	n += 1 + l + sovProviderMetadata(uint64(l))
	return n
}

func sovProviderMetadata(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozProviderMetadata(x uint64) (n int) {
	return sovProviderMetadata(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *ProviderMetadata) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProviderMetadata
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ProviderMetadata: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ProviderMetadata: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Provider", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProviderMetadata
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProviderMetadata
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProviderMetadata
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Provider = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Vault", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProviderMetadata
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProviderMetadata
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProviderMetadata
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Vault = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TotalDelegations", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProviderMetadata
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProviderMetadata
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProviderMetadata
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.TotalDelegations.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Chains", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProviderMetadata
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProviderMetadata
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProviderMetadata
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Chains = append(m.Chains, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DelegateCommission", wireType)
			}
			m.DelegateCommission = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProviderMetadata
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DelegateCommission |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastChange", wireType)
			}
			m.LastChange = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProviderMetadata
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastChange |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProviderMetadata
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProviderMetadata
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProviderMetadata
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Description.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProviderMetadata(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProviderMetadata
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipProviderMetadata(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowProviderMetadata
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowProviderMetadata
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowProviderMetadata
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthProviderMetadata
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupProviderMetadata
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthProviderMetadata
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthProviderMetadata        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowProviderMetadata          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupProviderMetadata = fmt.Errorf("proto: unexpected end of group")
)
