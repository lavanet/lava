// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: pairing/static_providers.proto

package types

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/lavanet/lava/v4/x/epochstorage/types"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type StaticProvidersList struct {
	ChainId      string         `protobuf:"bytes,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	Description  string         `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Geolocations []*GeoLocation `protobuf:"bytes,3,rep,name=geolocations,proto3" json:"geolocations,omitempty"`
}

func (m *StaticProvidersList) Reset()         { *m = StaticProvidersList{} }
func (m *StaticProvidersList) String() string { return proto.CompactTextString(m) }
func (*StaticProvidersList) ProtoMessage()    {}
func (*StaticProvidersList) Descriptor() ([]byte, []int) {
	return fileDescriptor_f335bcf9f2782043, []int{0}
}
func (m *StaticProvidersList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *StaticProvidersList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_StaticProvidersList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *StaticProvidersList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StaticProvidersList.Merge(m, src)
}
func (m *StaticProvidersList) XXX_Size() int {
	return m.Size()
}
func (m *StaticProvidersList) XXX_DiscardUnknown() {
	xxx_messageInfo_StaticProvidersList.DiscardUnknown(m)
}

var xxx_messageInfo_StaticProvidersList proto.InternalMessageInfo

func (m *StaticProvidersList) GetChainId() string {
	if m != nil {
		return m.ChainId
	}
	return ""
}

func (m *StaticProvidersList) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *StaticProvidersList) GetGeolocations() []*GeoLocation {
	if m != nil {
		return m.Geolocations
	}
	return nil
}

type GeoLocation struct {
	GeoLocation uint64          `protobuf:"varint,1,opt,name=geo_location,json=geoLocation,proto3" json:"geo_location,omitempty"`
	Providers   []*ProviderInfo `protobuf:"bytes,2,rep,name=providers,proto3" json:"providers,omitempty"`
}

func (m *GeoLocation) Reset()         { *m = GeoLocation{} }
func (m *GeoLocation) String() string { return proto.CompactTextString(m) }
func (*GeoLocation) ProtoMessage()    {}
func (*GeoLocation) Descriptor() ([]byte, []int) {
	return fileDescriptor_f335bcf9f2782043, []int{1}
}
func (m *GeoLocation) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GeoLocation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GeoLocation.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GeoLocation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GeoLocation.Merge(m, src)
}
func (m *GeoLocation) XXX_Size() int {
	return m.Size()
}
func (m *GeoLocation) XXX_DiscardUnknown() {
	xxx_messageInfo_GeoLocation.DiscardUnknown(m)
}

var xxx_messageInfo_GeoLocation proto.InternalMessageInfo

func (m *GeoLocation) GetGeoLocation() uint64 {
	if m != nil {
		return m.GeoLocation
	}
	return 0
}

func (m *GeoLocation) GetProviders() []*ProviderInfo {
	if m != nil {
		return m.Providers
	}
	return nil
}

type ProviderInfo struct {
	Address         string           `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Endpoints       []types.Endpoint `protobuf:"bytes,2,rep,name=endpoints,proto3" json:"endpoints"`
	ExpirationEpoch uint64           `protobuf:"varint,3,opt,name=expiration_epoch,json=expirationEpoch,proto3" json:"expiration_epoch,omitempty"`
}

func (m *ProviderInfo) Reset()         { *m = ProviderInfo{} }
func (m *ProviderInfo) String() string { return proto.CompactTextString(m) }
func (*ProviderInfo) ProtoMessage()    {}
func (*ProviderInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f335bcf9f2782043, []int{2}
}
func (m *ProviderInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ProviderInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ProviderInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ProviderInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProviderInfo.Merge(m, src)
}
func (m *ProviderInfo) XXX_Size() int {
	return m.Size()
}
func (m *ProviderInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ProviderInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ProviderInfo proto.InternalMessageInfo

func (m *ProviderInfo) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *ProviderInfo) GetEndpoints() []types.Endpoint {
	if m != nil {
		return m.Endpoints
	}
	return nil
}

func (m *ProviderInfo) GetExpirationEpoch() uint64 {
	if m != nil {
		return m.ExpirationEpoch
	}
	return 0
}

func init() {
	proto.RegisterType((*StaticProvidersList)(nil), "lavanet.lava.pairing.StaticProvidersList")
	proto.RegisterType((*GeoLocation)(nil), "lavanet.lava.pairing.GeoLocation")
	proto.RegisterType((*ProviderInfo)(nil), "lavanet.lava.pairing.ProviderInfo")
}

func init() { proto.RegisterFile("pairing/static_providers.proto", fileDescriptor_f335bcf9f2782043) }

var fileDescriptor_f335bcf9f2782043 = []byte{
	// 367 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x52, 0xc1, 0x4e, 0xc2, 0x40,
	0x10, 0x6d, 0x81, 0x88, 0x6c, 0x49, 0x34, 0x2b, 0x87, 0x8a, 0x49, 0x85, 0x7a, 0x10, 0x2f, 0x6d,
	0xa2, 0x3f, 0xa0, 0x24, 0x84, 0x90, 0x70, 0x30, 0xf5, 0xe6, 0xa5, 0x59, 0xda, 0xb5, 0x6c, 0x82,
	0x9d, 0xcd, 0xee, 0x4a, 0xf0, 0x2f, 0xbc, 0x9a, 0xf8, 0x41, 0x1c, 0x39, 0x7a, 0x32, 0x06, 0x7e,
	0xc4, 0x74, 0x69, 0xa5, 0x24, 0x9c, 0xa6, 0x33, 0xef, 0xbd, 0xbe, 0x99, 0xd7, 0x22, 0x87, 0x13,
	0x26, 0x58, 0x9a, 0xf8, 0x52, 0x11, 0xc5, 0xa2, 0x90, 0x0b, 0x98, 0xb3, 0x98, 0x0a, 0xe9, 0x71,
	0x01, 0x0a, 0x70, 0x6b, 0x46, 0xe6, 0x24, 0xa5, 0xca, 0xcb, 0xaa, 0x97, 0x93, 0xdb, 0xad, 0x04,
	0x12, 0xd0, 0x04, 0x3f, 0x7b, 0xda, 0x72, 0xdb, 0x17, 0x94, 0x43, 0x34, 0x95, 0x0a, 0x04, 0x49,
	0xa8, 0x4f, 0xd3, 0x98, 0x03, 0x4b, 0xd5, 0x16, 0x74, 0x3f, 0x4d, 0x74, 0xf6, 0xa4, 0x3d, 0x1e,
	0x0b, 0x8b, 0x31, 0x93, 0x0a, 0x9f, 0xa3, 0xe3, 0x68, 0x4a, 0x58, 0x1a, 0xb2, 0xd8, 0x36, 0x3b,
	0x66, 0xaf, 0x11, 0xd4, 0x75, 0x3f, 0x8a, 0x71, 0x07, 0x59, 0x31, 0x95, 0x91, 0x60, 0x5c, 0x31,
	0x48, 0xed, 0x8a, 0x46, 0xcb, 0x23, 0x3c, 0x40, 0xcd, 0x84, 0xc2, 0x0c, 0x22, 0x92, 0xb5, 0xd2,
	0xae, 0x76, 0xaa, 0x3d, 0xeb, 0xb6, 0xeb, 0x1d, 0x5a, 0xda, 0x1b, 0x52, 0x18, 0xe7, 0xcc, 0x60,
	0x4f, 0xe6, 0x0a, 0x64, 0x95, 0x40, 0xdc, 0xd5, 0x6f, 0x0d, 0x0b, 0x5c, 0xaf, 0x55, 0x0b, 0xac,
	0xa4, 0x44, 0xb9, 0x47, 0x8d, 0xff, 0xa4, 0xec, 0x8a, 0x76, 0x75, 0x0f, 0xbb, 0x16, 0xd7, 0x8e,
	0xd2, 0x17, 0x08, 0x76, 0x22, 0xf7, 0xcb, 0x44, 0xcd, 0x32, 0x86, 0x6d, 0x54, 0x27, 0x71, 0x2c,
	0xa8, 0x94, 0x45, 0x0e, 0x79, 0x8b, 0x87, 0xa8, 0x51, 0x84, 0x59, 0x98, 0x5d, 0xed, 0x9b, 0x95,
	0x83, 0xf7, 0x06, 0x39, 0xb7, 0x5f, 0x5b, 0xfe, 0x5c, 0x1a, 0xc1, 0x4e, 0x8b, 0x6f, 0xd0, 0x29,
	0x5d, 0x70, 0x26, 0xf4, 0x0d, 0xa1, 0x16, 0xd9, 0x55, 0x7d, 0xdc, 0xc9, 0x6e, 0x3e, 0xc8, 0xc6,
	0xfd, 0x87, 0xe5, 0xda, 0x31, 0x57, 0x6b, 0xc7, 0xfc, 0x5d, 0x3b, 0xe6, 0xc7, 0xc6, 0x31, 0x56,
	0x1b, 0xc7, 0xf8, 0xde, 0x38, 0xc6, 0xf3, 0x75, 0xc2, 0xd4, 0xf4, 0x6d, 0xe2, 0x45, 0xf0, 0xea,
	0xe7, 0x4b, 0xe8, 0xea, 0x2f, 0xfc, 0xe2, 0x5f, 0x52, 0xef, 0x9c, 0xca, 0xc9, 0x91, 0xfe, 0xf0,
	0x77, 0x7f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x37, 0xa5, 0x9a, 0xf7, 0x63, 0x02, 0x00, 0x00,
}

func (m *StaticProvidersList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *StaticProvidersList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *StaticProvidersList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Geolocations) > 0 {
		for iNdEx := len(m.Geolocations) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Geolocations[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintStaticProviders(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.Description) > 0 {
		i -= len(m.Description)
		copy(dAtA[i:], m.Description)
		i = encodeVarintStaticProviders(dAtA, i, uint64(len(m.Description)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.ChainId) > 0 {
		i -= len(m.ChainId)
		copy(dAtA[i:], m.ChainId)
		i = encodeVarintStaticProviders(dAtA, i, uint64(len(m.ChainId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GeoLocation) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GeoLocation) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GeoLocation) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Providers) > 0 {
		for iNdEx := len(m.Providers) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Providers[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintStaticProviders(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if m.GeoLocation != 0 {
		i = encodeVarintStaticProviders(dAtA, i, uint64(m.GeoLocation))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ProviderInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ProviderInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ProviderInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.ExpirationEpoch != 0 {
		i = encodeVarintStaticProviders(dAtA, i, uint64(m.ExpirationEpoch))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Endpoints) > 0 {
		for iNdEx := len(m.Endpoints) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Endpoints[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintStaticProviders(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintStaticProviders(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintStaticProviders(dAtA []byte, offset int, v uint64) int {
	offset -= sovStaticProviders(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *StaticProvidersList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ChainId)
	if l > 0 {
		n += 1 + l + sovStaticProviders(uint64(l))
	}
	l = len(m.Description)
	if l > 0 {
		n += 1 + l + sovStaticProviders(uint64(l))
	}
	if len(m.Geolocations) > 0 {
		for _, e := range m.Geolocations {
			l = e.Size()
			n += 1 + l + sovStaticProviders(uint64(l))
		}
	}
	return n
}

func (m *GeoLocation) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.GeoLocation != 0 {
		n += 1 + sovStaticProviders(uint64(m.GeoLocation))
	}
	if len(m.Providers) > 0 {
		for _, e := range m.Providers {
			l = e.Size()
			n += 1 + l + sovStaticProviders(uint64(l))
		}
	}
	return n
}

func (m *ProviderInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovStaticProviders(uint64(l))
	}
	if len(m.Endpoints) > 0 {
		for _, e := range m.Endpoints {
			l = e.Size()
			n += 1 + l + sovStaticProviders(uint64(l))
		}
	}
	if m.ExpirationEpoch != 0 {
		n += 1 + sovStaticProviders(uint64(m.ExpirationEpoch))
	}
	return n
}

func sovStaticProviders(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozStaticProviders(x uint64) (n int) {
	return sovStaticProviders(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *StaticProvidersList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowStaticProviders
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: StaticProvidersList: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: StaticProvidersList: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChainId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStaticProviders
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStaticProviders
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthStaticProviders
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ChainId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStaticProviders
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStaticProviders
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthStaticProviders
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Description = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Geolocations", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStaticProviders
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthStaticProviders
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthStaticProviders
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Geolocations = append(m.Geolocations, &GeoLocation{})
			if err := m.Geolocations[len(m.Geolocations)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipStaticProviders(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthStaticProviders
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GeoLocation) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowStaticProviders
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GeoLocation: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GeoLocation: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GeoLocation", wireType)
			}
			m.GeoLocation = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStaticProviders
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.GeoLocation |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Providers", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStaticProviders
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthStaticProviders
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthStaticProviders
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Providers = append(m.Providers, &ProviderInfo{})
			if err := m.Providers[len(m.Providers)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipStaticProviders(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthStaticProviders
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ProviderInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowStaticProviders
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ProviderInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ProviderInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStaticProviders
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStaticProviders
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthStaticProviders
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Endpoints", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStaticProviders
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthStaticProviders
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthStaticProviders
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Endpoints = append(m.Endpoints, types.Endpoint{})
			if err := m.Endpoints[len(m.Endpoints)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExpirationEpoch", wireType)
			}
			m.ExpirationEpoch = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStaticProviders
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ExpirationEpoch |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipStaticProviders(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthStaticProviders
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipStaticProviders(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowStaticProviders
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowStaticProviders
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowStaticProviders
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthStaticProviders
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupStaticProviders
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthStaticProviders
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthStaticProviders        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowStaticProviders          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupStaticProviders = fmt.Errorf("proto: unexpected end of group")
)
