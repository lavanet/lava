// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: lavanet/lava/subscription/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-sdk/types/tx/amino"
	_ "github.com/cosmos/gogoproto/gogoproto"
	grpc1 "github.com/cosmos/gogoproto/grpc"
	proto "github.com/cosmos/gogoproto/proto"
	types "github.com/lavanet/lava/v4/x/projects/types"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgBuy struct {
	Creator         string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Consumer        string `protobuf:"bytes,2,opt,name=consumer,proto3" json:"consumer,omitempty"`
	Index           string `protobuf:"bytes,3,opt,name=index,proto3" json:"index,omitempty"`
	Duration        uint64 `protobuf:"varint,4,opt,name=duration,proto3" json:"duration,omitempty"`
	AutoRenewal     bool   `protobuf:"varint,6,opt,name=auto_renewal,json=autoRenewal,proto3" json:"auto_renewal,omitempty"`
	AdvancePurchase bool   `protobuf:"varint,7,opt,name=advance_purchase,json=advancePurchase,proto3" json:"advance_purchase,omitempty"`
}

func (m *MsgBuy) Reset()         { *m = MsgBuy{} }
func (m *MsgBuy) String() string { return proto.CompactTextString(m) }
func (*MsgBuy) ProtoMessage()    {}
func (*MsgBuy) Descriptor() ([]byte, []int) {
	return fileDescriptor_b1bb075a6865b817, []int{0}
}
func (m *MsgBuy) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgBuy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgBuy.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgBuy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgBuy.Merge(m, src)
}
func (m *MsgBuy) XXX_Size() int {
	return m.Size()
}
func (m *MsgBuy) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgBuy.DiscardUnknown(m)
}

var xxx_messageInfo_MsgBuy proto.InternalMessageInfo

func (m *MsgBuy) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgBuy) GetConsumer() string {
	if m != nil {
		return m.Consumer
	}
	return ""
}

func (m *MsgBuy) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

func (m *MsgBuy) GetDuration() uint64 {
	if m != nil {
		return m.Duration
	}
	return 0
}

func (m *MsgBuy) GetAutoRenewal() bool {
	if m != nil {
		return m.AutoRenewal
	}
	return false
}

func (m *MsgBuy) GetAdvancePurchase() bool {
	if m != nil {
		return m.AdvancePurchase
	}
	return false
}

type MsgBuyResponse struct {
}

func (m *MsgBuyResponse) Reset()         { *m = MsgBuyResponse{} }
func (m *MsgBuyResponse) String() string { return proto.CompactTextString(m) }
func (*MsgBuyResponse) ProtoMessage()    {}
func (*MsgBuyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b1bb075a6865b817, []int{1}
}
func (m *MsgBuyResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgBuyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgBuyResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgBuyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgBuyResponse.Merge(m, src)
}
func (m *MsgBuyResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgBuyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgBuyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgBuyResponse proto.InternalMessageInfo

type MsgAddProject struct {
	Creator     string            `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	ProjectData types.ProjectData `protobuf:"bytes,2,opt,name=project_data,json=projectData,proto3" json:"project_data"`
}

func (m *MsgAddProject) Reset()         { *m = MsgAddProject{} }
func (m *MsgAddProject) String() string { return proto.CompactTextString(m) }
func (*MsgAddProject) ProtoMessage()    {}
func (*MsgAddProject) Descriptor() ([]byte, []int) {
	return fileDescriptor_b1bb075a6865b817, []int{2}
}
func (m *MsgAddProject) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddProject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddProject.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddProject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddProject.Merge(m, src)
}
func (m *MsgAddProject) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddProject) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddProject.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddProject proto.InternalMessageInfo

func (m *MsgAddProject) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgAddProject) GetProjectData() types.ProjectData {
	if m != nil {
		return m.ProjectData
	}
	return types.ProjectData{}
}

type MsgAddProjectResponse struct {
}

func (m *MsgAddProjectResponse) Reset()         { *m = MsgAddProjectResponse{} }
func (m *MsgAddProjectResponse) String() string { return proto.CompactTextString(m) }
func (*MsgAddProjectResponse) ProtoMessage()    {}
func (*MsgAddProjectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b1bb075a6865b817, []int{3}
}
func (m *MsgAddProjectResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddProjectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddProjectResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddProjectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddProjectResponse.Merge(m, src)
}
func (m *MsgAddProjectResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddProjectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddProjectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddProjectResponse proto.InternalMessageInfo

type MsgDelProject struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Name    string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (m *MsgDelProject) Reset()         { *m = MsgDelProject{} }
func (m *MsgDelProject) String() string { return proto.CompactTextString(m) }
func (*MsgDelProject) ProtoMessage()    {}
func (*MsgDelProject) Descriptor() ([]byte, []int) {
	return fileDescriptor_b1bb075a6865b817, []int{4}
}
func (m *MsgDelProject) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDelProject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDelProject.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDelProject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDelProject.Merge(m, src)
}
func (m *MsgDelProject) XXX_Size() int {
	return m.Size()
}
func (m *MsgDelProject) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDelProject.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDelProject proto.InternalMessageInfo

func (m *MsgDelProject) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDelProject) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type MsgDelProjectResponse struct {
}

func (m *MsgDelProjectResponse) Reset()         { *m = MsgDelProjectResponse{} }
func (m *MsgDelProjectResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDelProjectResponse) ProtoMessage()    {}
func (*MsgDelProjectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b1bb075a6865b817, []int{5}
}
func (m *MsgDelProjectResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDelProjectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDelProjectResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDelProjectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDelProjectResponse.Merge(m, src)
}
func (m *MsgDelProjectResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDelProjectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDelProjectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDelProjectResponse proto.InternalMessageInfo

type MsgAutoRenewal struct {
	Creator  string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Enable   bool   `protobuf:"varint,2,opt,name=enable,proto3" json:"enable,omitempty"`
	Consumer string `protobuf:"bytes,3,opt,name=consumer,proto3" json:"consumer,omitempty"`
	Index    string `protobuf:"bytes,4,opt,name=index,proto3" json:"index,omitempty"`
}

func (m *MsgAutoRenewal) Reset()         { *m = MsgAutoRenewal{} }
func (m *MsgAutoRenewal) String() string { return proto.CompactTextString(m) }
func (*MsgAutoRenewal) ProtoMessage()    {}
func (*MsgAutoRenewal) Descriptor() ([]byte, []int) {
	return fileDescriptor_b1bb075a6865b817, []int{6}
}
func (m *MsgAutoRenewal) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAutoRenewal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAutoRenewal.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAutoRenewal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAutoRenewal.Merge(m, src)
}
func (m *MsgAutoRenewal) XXX_Size() int {
	return m.Size()
}
func (m *MsgAutoRenewal) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAutoRenewal.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAutoRenewal proto.InternalMessageInfo

func (m *MsgAutoRenewal) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgAutoRenewal) GetEnable() bool {
	if m != nil {
		return m.Enable
	}
	return false
}

func (m *MsgAutoRenewal) GetConsumer() string {
	if m != nil {
		return m.Consumer
	}
	return ""
}

func (m *MsgAutoRenewal) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

type MsgAutoRenewalResponse struct {
}

func (m *MsgAutoRenewalResponse) Reset()         { *m = MsgAutoRenewalResponse{} }
func (m *MsgAutoRenewalResponse) String() string { return proto.CompactTextString(m) }
func (*MsgAutoRenewalResponse) ProtoMessage()    {}
func (*MsgAutoRenewalResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b1bb075a6865b817, []int{7}
}
func (m *MsgAutoRenewalResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAutoRenewalResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAutoRenewalResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAutoRenewalResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAutoRenewalResponse.Merge(m, src)
}
func (m *MsgAutoRenewalResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgAutoRenewalResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAutoRenewalResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAutoRenewalResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgBuy)(nil), "lavanet.lava.subscription.MsgBuy")
	proto.RegisterType((*MsgBuyResponse)(nil), "lavanet.lava.subscription.MsgBuyResponse")
	proto.RegisterType((*MsgAddProject)(nil), "lavanet.lava.subscription.MsgAddProject")
	proto.RegisterType((*MsgAddProjectResponse)(nil), "lavanet.lava.subscription.MsgAddProjectResponse")
	proto.RegisterType((*MsgDelProject)(nil), "lavanet.lava.subscription.MsgDelProject")
	proto.RegisterType((*MsgDelProjectResponse)(nil), "lavanet.lava.subscription.MsgDelProjectResponse")
	proto.RegisterType((*MsgAutoRenewal)(nil), "lavanet.lava.subscription.MsgAutoRenewal")
	proto.RegisterType((*MsgAutoRenewalResponse)(nil), "lavanet.lava.subscription.MsgAutoRenewalResponse")
}

func init() {
	proto.RegisterFile("lavanet/lava/subscription/tx.proto", fileDescriptor_b1bb075a6865b817)
}

var fileDescriptor_b1bb075a6865b817 = []byte{
	// 555 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x54, 0x4f, 0x6f, 0xd3, 0x30,
	0x14, 0xaf, 0x69, 0x96, 0x15, 0x77, 0x40, 0xb1, 0xf6, 0x27, 0x44, 0x10, 0xb6, 0x70, 0xe9, 0x38,
	0x24, 0x30, 0x38, 0xf5, 0xb6, 0x6a, 0x17, 0x40, 0x95, 0xa6, 0x70, 0x83, 0x43, 0xe5, 0x26, 0x56,
	0x1a, 0x68, 0xed, 0x28, 0x76, 0x4a, 0xfb, 0x15, 0x38, 0x21, 0xc1, 0x8d, 0x2f, 0xc1, 0xc7, 0xd8,
	0x71, 0x47, 0x24, 0x24, 0x84, 0xda, 0x03, 0x5f, 0x03, 0xc5, 0x49, 0x9a, 0x04, 0xe8, 0xb2, 0x4b,
	0xfc, 0xde, 0xf3, 0xcf, 0xef, 0xf7, 0xf3, 0x7b, 0x2f, 0x86, 0xe6, 0x04, 0xcf, 0x30, 0x25, 0xc2,
	0x4e, 0x56, 0x9b, 0xc7, 0x23, 0xee, 0x46, 0x41, 0x28, 0x02, 0x46, 0x6d, 0x31, 0xb7, 0xc2, 0x88,
	0x09, 0x86, 0xee, 0x65, 0x18, 0x2b, 0x59, 0xad, 0x32, 0x46, 0xbf, 0x8b, 0xa7, 0x01, 0x65, 0xb6,
	0xfc, 0xa6, 0x68, 0xfd, 0x51, 0x25, 0x63, 0x18, 0xb1, 0x77, 0xc4, 0x15, 0x3c, 0x37, 0x32, 0xd0,
	0xae, 0xcf, 0x7c, 0x26, 0x4d, 0x3b, 0xb1, 0xd2, 0xa8, 0xf9, 0x03, 0x40, 0x75, 0xc0, 0xfd, 0x7e,
	0xbc, 0x40, 0x1a, 0xdc, 0x76, 0x23, 0x82, 0x05, 0x8b, 0x34, 0x70, 0x08, 0xba, 0x37, 0x9d, 0xdc,
	0x45, 0x3a, 0x6c, 0xb9, 0x8c, 0xf2, 0x78, 0x4a, 0x22, 0xed, 0x86, 0xdc, 0x5a, 0xfb, 0x68, 0x17,
	0x6e, 0x05, 0xd4, 0x23, 0x73, 0xad, 0x29, 0x37, 0x52, 0x27, 0x39, 0xe1, 0xc5, 0x11, 0x4e, 0x04,
	0x6b, 0xca, 0x21, 0xe8, 0x2a, 0xce, 0xda, 0x47, 0x47, 0x70, 0x07, 0xc7, 0x82, 0x0d, 0x23, 0x42,
	0xc9, 0x07, 0x3c, 0xd1, 0xd4, 0x43, 0xd0, 0x6d, 0x39, 0xed, 0x24, 0xe6, 0xa4, 0x21, 0x74, 0x0c,
	0x3b, 0xd8, 0x9b, 0x61, 0xea, 0x92, 0x61, 0x18, 0x47, 0xee, 0x18, 0x73, 0xa2, 0x6d, 0x4b, 0xd8,
	0x9d, 0x2c, 0x7e, 0x9e, 0x85, 0x7b, 0x7b, 0x1f, 0x7f, 0x7f, 0x7b, 0xdc, 0xa9, 0x54, 0xb1, 0x1f,
	0x2f, 0x5e, 0x2a, 0xad, 0xad, 0x8e, 0x6a, 0x76, 0xe0, 0xed, 0xf4, 0x72, 0x0e, 0xe1, 0x21, 0xa3,
	0x9c, 0x98, 0x5f, 0x00, 0xbc, 0x35, 0xe0, 0xfe, 0xa9, 0xe7, 0x9d, 0xa7, 0xd5, 0xb9, 0xe2, 0xda,
	0xaf, 0xe0, 0x4e, 0x56, 0xc2, 0xa1, 0x87, 0x05, 0x96, 0x57, 0x6f, 0x9f, 0x98, 0x56, 0xa5, 0x37,
	0x79, 0xb5, 0xad, 0x2c, 0xdf, 0x19, 0x16, 0xb8, 0xaf, 0x5c, 0xfc, 0x7c, 0xd8, 0x70, 0xda, 0x61,
	0x11, 0xea, 0xdd, 0x4f, 0x74, 0x1e, 0x54, 0x74, 0x16, 0x22, 0xcc, 0x03, 0xb8, 0x57, 0x51, 0xb5,
	0xd6, 0xfb, 0x56, 0xca, 0x3d, 0x23, 0x93, 0x7a, 0xb9, 0x08, 0x2a, 0x14, 0x4f, 0x49, 0xd6, 0x21,
	0x69, 0xff, 0x8f, 0xb5, 0xc8, 0x95, 0xb1, 0x16, 0x81, 0x35, 0xeb, 0x67, 0x20, 0x0b, 0x77, 0x5a,
	0x6a, 0xc9, 0x66, 0xde, 0x7d, 0xa8, 0x12, 0x8a, 0x47, 0x93, 0x94, 0xb9, 0xe5, 0x64, 0x5e, 0x65,
	0x6a, 0x9a, 0x9b, 0xa6, 0x46, 0x29, 0x4d, 0x4d, 0xef, 0x41, 0xa2, 0x56, 0xab, 0xd6, 0xa8, 0x90,
	0x60, 0x6a, 0x70, 0xbf, 0x2a, 0x2a, 0xd7, 0x7b, 0xf2, 0xb5, 0x09, 0x9b, 0x03, 0xee, 0xa3, 0xd7,
	0xb0, 0x99, 0x4c, 0xf2, 0x91, 0xb5, 0xf1, 0xf7, 0xb1, 0xd2, 0x79, 0xd0, 0x8f, 0x6b, 0x21, 0x79,
	0x72, 0x34, 0x86, 0xb0, 0x34, 0x2e, 0xdd, 0xab, 0x0f, 0x16, 0x48, 0xfd, 0xc9, 0x75, 0x91, 0x65,
	0xa6, 0x52, 0xa7, 0x6b, 0x98, 0x0a, 0x64, 0x1d, 0xd3, 0xbf, 0x0d, 0x46, 0xef, 0x61, 0xbb, 0xdc,
	0xdc, 0x9a, 0x6a, 0x94, 0xa0, 0xfa, 0xd3, 0x6b, 0x43, 0x73, 0xb2, 0xfe, 0x8b, 0x8b, 0xa5, 0x01,
	0x2e, 0x97, 0x06, 0xf8, 0xb5, 0x34, 0xc0, 0xa7, 0x95, 0xd1, 0xb8, 0x5c, 0x19, 0x8d, 0xef, 0x2b,
	0xa3, 0xf1, 0xc6, 0xf6, 0x03, 0x31, 0x8e, 0x47, 0x96, 0xcb, 0xa6, 0x76, 0xe5, 0x0d, 0x9b, 0x3d,
	0xb7, 0xe7, 0x7f, 0x3d, 0x8d, 0x8b, 0x90, 0xf0, 0x91, 0x2a, 0x5f, 0xad, 0x67, 0x7f, 0x02, 0x00,
	0x00, 0xff, 0xff, 0x9a, 0x98, 0x2b, 0x5b, 0x44, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	Buy(ctx context.Context, in *MsgBuy, opts ...grpc.CallOption) (*MsgBuyResponse, error)
	AddProject(ctx context.Context, in *MsgAddProject, opts ...grpc.CallOption) (*MsgAddProjectResponse, error)
	DelProject(ctx context.Context, in *MsgDelProject, opts ...grpc.CallOption) (*MsgDelProjectResponse, error)
	AutoRenewal(ctx context.Context, in *MsgAutoRenewal, opts ...grpc.CallOption) (*MsgAutoRenewalResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) Buy(ctx context.Context, in *MsgBuy, opts ...grpc.CallOption) (*MsgBuyResponse, error) {
	out := new(MsgBuyResponse)
	err := c.cc.Invoke(ctx, "/lavanet.lava.subscription.Msg/Buy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) AddProject(ctx context.Context, in *MsgAddProject, opts ...grpc.CallOption) (*MsgAddProjectResponse, error) {
	out := new(MsgAddProjectResponse)
	err := c.cc.Invoke(ctx, "/lavanet.lava.subscription.Msg/AddProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DelProject(ctx context.Context, in *MsgDelProject, opts ...grpc.CallOption) (*MsgDelProjectResponse, error) {
	out := new(MsgDelProjectResponse)
	err := c.cc.Invoke(ctx, "/lavanet.lava.subscription.Msg/DelProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) AutoRenewal(ctx context.Context, in *MsgAutoRenewal, opts ...grpc.CallOption) (*MsgAutoRenewalResponse, error) {
	out := new(MsgAutoRenewalResponse)
	err := c.cc.Invoke(ctx, "/lavanet.lava.subscription.Msg/AutoRenewal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	Buy(context.Context, *MsgBuy) (*MsgBuyResponse, error)
	AddProject(context.Context, *MsgAddProject) (*MsgAddProjectResponse, error)
	DelProject(context.Context, *MsgDelProject) (*MsgDelProjectResponse, error)
	AutoRenewal(context.Context, *MsgAutoRenewal) (*MsgAutoRenewalResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) Buy(ctx context.Context, req *MsgBuy) (*MsgBuyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Buy not implemented")
}
func (*UnimplementedMsgServer) AddProject(ctx context.Context, req *MsgAddProject) (*MsgAddProjectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddProject not implemented")
}
func (*UnimplementedMsgServer) DelProject(ctx context.Context, req *MsgDelProject) (*MsgDelProjectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DelProject not implemented")
}
func (*UnimplementedMsgServer) AutoRenewal(ctx context.Context, req *MsgAutoRenewal) (*MsgAutoRenewalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AutoRenewal not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_Buy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgBuy)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).Buy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lavanet.lava.subscription.Msg/Buy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).Buy(ctx, req.(*MsgBuy))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_AddProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAddProject)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).AddProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lavanet.lava.subscription.Msg/AddProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).AddProject(ctx, req.(*MsgAddProject))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DelProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDelProject)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DelProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lavanet.lava.subscription.Msg/DelProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DelProject(ctx, req.(*MsgDelProject))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_AutoRenewal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAutoRenewal)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).AutoRenewal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lavanet.lava.subscription.Msg/AutoRenewal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).AutoRenewal(ctx, req.(*MsgAutoRenewal))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "lavanet.lava.subscription.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Buy",
			Handler:    _Msg_Buy_Handler,
		},
		{
			MethodName: "AddProject",
			Handler:    _Msg_AddProject_Handler,
		},
		{
			MethodName: "DelProject",
			Handler:    _Msg_DelProject_Handler,
		},
		{
			MethodName: "AutoRenewal",
			Handler:    _Msg_AutoRenewal_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "lavanet/lava/subscription/tx.proto",
}

func (m *MsgBuy) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgBuy) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgBuy) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.AdvancePurchase {
		i--
		if m.AdvancePurchase {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x38
	}
	if m.AutoRenewal {
		i--
		if m.AutoRenewal {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x30
	}
	if m.Duration != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Duration))
		i--
		dAtA[i] = 0x20
	}
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Consumer) > 0 {
		i -= len(m.Consumer)
		copy(dAtA[i:], m.Consumer)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Consumer)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgBuyResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgBuyResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgBuyResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgAddProject) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddProject) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddProject) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.ProjectData.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAddProjectResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddProjectResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddProjectResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDelProject) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDelProject) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDelProject) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDelProjectResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDelProjectResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDelProjectResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgAutoRenewal) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAutoRenewal) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAutoRenewal) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Consumer) > 0 {
		i -= len(m.Consumer)
		copy(dAtA[i:], m.Consumer)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Consumer)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Enable {
		i--
		if m.Enable {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAutoRenewalResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAutoRenewalResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAutoRenewalResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgBuy) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Consumer)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Duration != 0 {
		n += 1 + sovTx(uint64(m.Duration))
	}
	if m.AutoRenewal {
		n += 2
	}
	if m.AdvancePurchase {
		n += 2
	}
	return n
}

func (m *MsgBuyResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgAddProject) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.ProjectData.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgAddProjectResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDelProject) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDelProjectResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgAutoRenewal) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Enable {
		n += 2
	}
	l = len(m.Consumer)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgAutoRenewalResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgBuy) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgBuy: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgBuy: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Consumer", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Consumer = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Duration", wireType)
			}
			m.Duration = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Duration |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AutoRenewal", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AutoRenewal = bool(v != 0)
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AdvancePurchase", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AdvancePurchase = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgBuyResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgBuyResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgBuyResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddProject) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddProject: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddProject: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProjectData", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.ProjectData.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddProjectResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddProjectResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddProjectResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDelProject) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDelProject: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDelProject: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDelProjectResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDelProjectResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDelProjectResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAutoRenewal) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAutoRenewal: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAutoRenewal: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Enable", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Enable = bool(v != 0)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Consumer", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Consumer = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAutoRenewalResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAutoRenewalResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAutoRenewalResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
