// Code generated by MockGen. DO NOT EDIT.
// Source: consumer_websocket_manager_test.go

// Package chainlib is a generated GoMock package.
package chainlib

import (
	net "net"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockWebsocketConnection is a mock of WebsocketConnection interface.
type MockWebsocketConnection struct {
	ctrl     *gomock.Controller
	recorder *MockWebsocketConnectionMockRecorder
}

// MockWebsocketConnectionMockRecorder is the mock recorder for MockWebsocketConnection.
type MockWebsocketConnectionMockRecorder struct {
	mock *MockWebsocketConnection
}

// NewMockWebsocketConnection creates a new mock instance.
func NewMockWebsocketConnection(ctrl *gomock.Controller) *MockWebsocketConnection {
	mock := &MockWebsocketConnection{ctrl: ctrl}
	mock.recorder = &MockWebsocketConnectionMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWebsocketConnection) EXPECT() *MockWebsocketConnectionMockRecorder {
	return m.recorder
}

// Locals mocks base method.
func (m *MockWebsocketConnection) Locals(key string) interface{} {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Locals", key)
	ret0, _ := ret[0].(interface{})
	return ret0
}

// Locals indicates an expected call of Locals.
func (mr *MockWebsocketConnectionMockRecorder) Locals(key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Locals", reflect.TypeOf((*MockWebsocketConnection)(nil).Locals), key)
}

// RemoteAddr mocks base method.
func (m *MockWebsocketConnection) RemoteAddr() net.Addr {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RemoteAddr")
	ret0, _ := ret[0].(net.Addr)
	return ret0
}

// RemoteAddr indicates an expected call of RemoteAddr.
func (mr *MockWebsocketConnectionMockRecorder) RemoteAddr() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoteAddr", reflect.TypeOf((*MockWebsocketConnection)(nil).RemoteAddr))
}

// WriteMessage mocks base method.
func (m *MockWebsocketConnection) WriteMessage(messageType int, data []byte) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WriteMessage", messageType, data)
	ret0, _ := ret[0].(error)
	return ret0
}

// WriteMessage indicates an expected call of WriteMessage.
func (mr *MockWebsocketConnectionMockRecorder) WriteMessage(messageType, data interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WriteMessage", reflect.TypeOf((*MockWebsocketConnection)(nil).WriteMessage), messageType, data)
}
