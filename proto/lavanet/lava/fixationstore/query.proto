syntax = "proto3";
package lavanet.lava.fixationstore;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
option go_package = "github.com/lavanet/lava/v3/x/fixationstore/types";

import "lavanet/lava/fixationstore/fixation.proto";

// Query defines the gRPC querier service.
service Query {
  // Queries a fixation store for all its indices.
  rpc AllIndices(QueryAllIndicesRequest) returns (QueryAllIndicesResponse) {
    option (google.api.http).get = "/lavanet/lava/fixationstore/all_indices/{store_key}/{prefix}";
  }

  // Queries for all store keys.
  rpc StoreKeys(QueryStoreKeysRequest) returns (QueryStoreKeysResponse) {
    option (google.api.http).get = "/lavanet/lava/fixationstore/store_keys";
  }

  // Queries for all versions of a specific entry (versions = different blocks).
  rpc Versions(QueryVersionsRequest) returns (QueryVersionsResponse) {
    option (google.api.http).get = "/lavanet/lava/fixationstore/versions/{store_key}/{prefix}/{key}";
  }

  // Queries for a specific entry with detailed information.
  rpc Entry(QueryEntryRequest) returns (QueryEntryResponse) {
    option (google.api.http).get = "/lavanet/lava/fixationstore/Entry/{store_key}/{prefix}/{key}/{block}";
  }
}

message QueryAllIndicesRequest {
  string store_key = 1;
  string prefix = 2;
}

message QueryAllIndicesResponse {
  repeated string indices = 1;
}

message QueryStoreKeysRequest {
}

message StoreKeyAndPrefix {
  string store_key = 1;
  string prefix = 2;
}

message QueryStoreKeysResponse {
  repeated StoreKeyAndPrefix keys = 1 [(gogoproto.nullable) = false];
}

message QueryVersionsRequest {
  string store_key = 1;
  string prefix = 2;
  string key = 3;
}

message QueryVersionsResponse {
  repeated lavanet.lava.fixationstore.Entry entries = 1 [(gogoproto.nullable) = false];
}

message QueryEntryRequest {
  string store_key = 1;
  string prefix = 2;
  string key = 3;
  uint64 block = 4;
  bool hide_data = 5;
  bool string_data = 6;
}

message QueryEntryResponse {
  lavanet.lava.fixationstore.Entry entry = 1;
  string string_data = 2; // optional: entry data as a string
}