syntax = "proto3";
package lavanet.lava.dualstaking;
import "amino/amino.proto";

import "cosmos/base/v1beta1/coin.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/lavanet/lava/v4/x/dualstaking/types";

// Msg defines the Msg service.
service Msg {
  rpc Delegate(MsgDelegate) returns (MsgDelegateResponse);
  rpc Redelegate(MsgRedelegate) returns (MsgRedelegateResponse);
  rpc Unbond(MsgUnbond) returns (MsgUnbondResponse);
  rpc ClaimRewards(MsgClaimRewards) returns (MsgClaimRewardsResponse);
// this line is used by starport scaffolding # proto/tx/rpc
}

message MsgDelegate {
  option (amino.name) = "dualstaking/Delegate";
  string creator = 1;
  string validator = 5;
  string provider = 2;
  string chainID = 3;
  cosmos.base.v1beta1.Coin amount = 4 [(gogoproto.nullable) = false];
}

message MsgDelegateResponse {
}

message MsgRedelegate {
  option (amino.name) = "dualstaking/Redelegate";
  string creator = 1;
  string from_provider = 2;
  string to_provider = 3;
  string from_chainID = 4;
  string to_chainID = 5;
  cosmos.base.v1beta1.Coin amount = 6 [(gogoproto.nullable) = false];
}

message MsgRedelegateResponse {
}

message MsgUnbond {
  option (amino.name) = "dualstaking/Unbond";
  string creator = 1;
  string validator = 5;
  string provider = 2;
  string chainID = 3;
  cosmos.base.v1beta1.Coin amount = 4 [(gogoproto.nullable) = false];
}

message MsgUnbondResponse {
}

message MsgClaimRewards {
  option (amino.name) = "dualstaking/MsgClaimRewards";
  string creator = 1; // delegator
  string provider = 2;
}

message MsgClaimRewardsResponse {
}