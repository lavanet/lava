syntax = "proto3";
package lavanet.lava.projects;

import "gogoproto/gogo.proto";
import "lavanet/lava/plans/policy.proto";
option (gogoproto.equal_all) = true;
option go_package = "github.com/lavanet/lava/v4/x/projects/types";

message Project {
    string index = 1; // unique id that will be the combination of subscription address and project name, cannot be changed once created
    string subscription = 2; // the subscription address that owns the project
    reserved 3;
    bool enabled = 4; // enabled flag
    repeated ProjectKey project_keys = 5 [(gogoproto.nullable) = false, (gogoproto.jsontag) = "project_keys"]; // list of the projects keys
    lavanet.lava.plans.Policy admin_policy = 6 [(gogoproto.jsontag) = "admin_policy"];
    uint64 used_cu = 7;
    lavanet.lava.plans.Policy subscription_policy = 8 [(gogoproto.jsontag) = "subscription_policy"];
    uint64 snapshot = 9; // snapshot id to uniquely identify snapshots
}

message ProjectKey {
    string key = 1 [(gogoproto.jsontag) = "key"]; // the address of the project key

    reserved 2;
    reserved 3;

    enum Type {
        NONE = 0x0;
        ADMIN = 0x1;
        DEVELOPER = 0x2;
    }

    uint32 kinds = 4 [(gogoproto.jsontag) = "kinds"];
}

message ProtoDeveloperData {
    string projectID = 1;
    reserved 2;
}

// used as a container struct for the subscription module
message ProjectData {
    string name = 1;
    reserved 2;
    bool enabled = 3;
    repeated ProjectKey projectKeys = 4 [(gogoproto.nullable) = false];
    lavanet.lava.plans.Policy policy = 5;
}
