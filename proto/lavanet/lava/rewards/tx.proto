syntax = "proto3";
package lavanet.lava.rewards;
import "amino/amino.proto";
import "cosmos/base/v1beta1/coin.proto";
import "gogoproto/gogo.proto";

// this line is used by starport scaffolding # proto/tx/import

option go_package = "github.com/lavanet/lava/v3/x/rewards/types";

// Msg defines the Msg service.
service Msg {
    rpc SetIprpcData(MsgSetIprpcData) returns (MsgSetIprpcDataResponse);
    rpc FundIprpc(MsgFundIprpc) returns (MsgFundIprpcResponse);
    // this line is used by starport scaffolding # proto/tx/rpc
}

message MsgSetIprpcData {
    option (amino.name) = "rewards/MsgSetIprpcData";
    string authority = 1;
    cosmos.base.v1beta1.Coin min_iprpc_cost = 2 [(gogoproto.nullable) = false];
    repeated string iprpc_subscriptions = 3;
}

message MsgSetIprpcDataResponse {
}

message MsgFundIprpc {
    option (amino.name) = "rewards/MsgFundIprpc";
    string creator = 1;
    uint64 duration = 2; // vesting duration in months
    repeated cosmos.base.v1beta1.Coin amounts = 3 [
        (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins",
        (gogoproto.nullable)     = false
    ]; // tokens to be distributed as reward
    string spec = 4; // spec on which the providers get incentive 
}

message MsgFundIprpcResponse {
}

// this line is used by starport scaffolding # proto/tx/message