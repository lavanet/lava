syntax = "proto3";
package lavanet.lava.timerstore;

option go_package = "github.com/lavanet/lava/v4/x/timerstore/types";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";

import "lavanet/lava/timerstore/timer.proto";

// Query defines the gRPC querier service.
service Query {
  // Queries a timer store for all its timers.
  rpc AllTimers(QueryAllTimersRequest) returns (QueryAllTimersResponse) {
    option (google.api.http).get = "/lavanet/lava/timerstore/all_timers/{store_key}/{prefix}";
  }

  // Queries for all store keys.
  rpc StoreKeys(QueryStoreKeysRequest) returns (QueryStoreKeysResponse) {
    option (google.api.http).get = "/lavanet/lava/timerstore/store_keys";
  }

  // Queries for next timeout of a timer.
  rpc Next(QueryNextRequest) returns (QueryNextResponse) {
    option (google.api.http).get = "/lavanet/lava/timerstore/next/{store_key}/{prefix}";
  }
}

message QueryAllTimersRequest {
  string store_key = 1;
  string prefix = 2;
}

message TimerInfo {
  oneof block {
    string blockTime = 1;
    uint64 blockHeight = 2;
  }
  string key = 3;
  bytes data = 4;
}

message QueryAllTimersResponse {
  repeated TimerInfo blockTimeTimers = 1;
  repeated TimerInfo blockHeightTimers = 2;
  string tick = 3;
}

message QueryStoreKeysRequest {
}

message StoreKeyAndPrefix {
  string store_key = 1;
  string prefix = 2;
}

message QueryStoreKeysResponse {
  repeated StoreKeyAndPrefix keys = 1 [(gogoproto.nullable) = false];
}

message QueryNextRequest {
  string store_key = 1;
  string prefix = 2;
}

message QueryNextResponse {
  uint64 nextBlockHeight = 1;
  string nextBlockTime = 2;
  string tick = 3;
}