syntax = "proto3";
package lavanet.lava.conflict;

// this line is used by starport scaffolding # proto/tx/import
import "cosmos/base/v1beta1/coin.proto";
import "gogoproto/gogo.proto";
import "lavanet/lava/conflict/conflict_data.proto";

option go_package = "github.com/lavanet/lava/v2/x/conflict/types";


// Msg defines the Msg service.
service Msg {
  rpc Detection(MsgDetection) returns (MsgDetectionResponse);
  rpc ConflictVoteCommit(MsgConflictVoteCommit) returns (MsgConflictVoteCommitResponse);
  rpc ConflictVoteReveal(MsgConflictVoteReveal) returns (MsgConflictVoteRevealResponse);
// this line is used by starport scaffolding # proto/tx/rpc
}

// TODO:: change coin type to another proto (define proto in another file int this directory)
message MsgDetection {
  string creator = 1;
  reserved 2; 
  reserved 3;
  reserved 4;
  oneof conflict {
    FinalizationConflict finalization_conflict = 5; 
    ResponseConflict response_conflict = 6;
  }
}

message MsgDetectionResponse {
}

message MsgConflictVoteCommit {
  string creator = 1;
  string voteID = 2;
  bytes hash = 3;
}

message MsgConflictVoteCommitResponse {
}

message MsgConflictVoteReveal {
  string creator = 1;
  string voteID = 2;
  int64 nonce = 3;
  bytes hash = 4;
}

message MsgConflictVoteRevealResponse {
}

// this line is used by starport scaffolding # proto/tx/message