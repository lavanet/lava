syntax = "proto3";
package lavanet.lava.pairing;
import "gogoproto/gogo.proto";
import "lavanet/lava/pairing/relay.proto";
import "google/protobuf/empty.proto";

option go_package = "github.com/lavanet/lava/v4/x/pairing/types";

service RelayerCache {
    rpc GetRelay (RelayCacheGet) returns (CacheRelayReply) {}
    rpc SetRelay (RelayCacheSet) returns (google.protobuf.Empty) {}
    rpc Health (google.protobuf.Empty) returns (CacheUsage) {}
}

message CacheRelayReply {
    RelayReply reply = 1;
    repeated Metadata optional_metadata = 2 [(gogoproto.nullable)   = false];
    int64 seen_block = 3;
    repeated BlockHashToHeight blocks_hashes_to_heights = 4;
}

message CacheUsage {
    uint64 CacheHits = 1;
    uint64 CacheMisses = 2;
}

// data containing the cache key hash
message CacheHash {
    RelayPrivateData request = 1;
    string chain_id = 2;
}

message RelayCacheGet {
    bytes request_hash = 1; // hash of the RelayPrivateData
    bytes block_hash = 2;
    bool finalized = 3;
    int64 requested_block = 4;
    string shared_state_id = 5; // empty id for no shared state
    string chain_id = 6; // used to set latest block per chain.
    int64 seen_block = 7;
    repeated BlockHashToHeight blocks_hashes_to_heights = 8;
}

message RelayCacheSet {
    bytes request_hash = 1; // hash of the RelayPrivateData
    bytes block_hash = 2;
    RelayReply response = 3;
    bool finalized = 4;
    repeated Metadata optional_metadata = 5 [(gogoproto.nullable) = false];
    string shared_state_id = 6; // empty id for no shared state
    int64 requested_block = 7;
    string chain_id = 9; // used to set latest block per chain.
    int64 seen_block = 10;
    int64 average_block_time = 11;
    bool is_node_error = 12; // node errors wont be cached for long even if they are finalized in cases where it returns a valid response later on
    repeated BlockHashToHeight blocks_hashes_to_heights = 13;
}

message BlockHashToHeight {
    string hash = 1;
    int64 height = 2;
}