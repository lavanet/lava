syntax = "proto3";
package lavanet.lava.pairing;
// this line is used by starport scaffolding # proto/tx/import
import "cosmos/base/v1beta1/coin.proto";
import "gogoproto/gogo.proto";
import "lavanet/lava/epochstorage/endpoint.proto";
import "lavanet/lava/pairing/relay.proto";
import "cosmos/staking/v1beta1/staking.proto";
import "amino/amino.proto";

option go_package = "github.com/lavanet/lava/v4/x/pairing/types";

// Msg defines the Msg service.
service Msg {
  rpc StakeProvider(MsgStakeProvider) returns (MsgStakeProviderResponse);
  rpc UnstakeProvider(MsgUnstakeProvider) returns (MsgUnstakeProviderResponse);
  rpc RelayPayment(MsgRelayPayment) returns (MsgRelayPaymentResponse);
  rpc FreezeProvider(MsgFreezeProvider) returns (MsgFreezeProviderResponse);
  rpc UnfreezeProvider(MsgUnfreezeProvider) returns (MsgUnfreezeProviderResponse);
  rpc MoveProviderStake(MsgMoveProviderStake) returns (MsgMoveProviderStakeResponse);
// this line is used by starport scaffolding # proto/tx/rpc
}

message MsgStakeProvider {
  option (amino.name) = "pairing/StakeProvider";
  string creator = 1;
  string chainID = 2;
  cosmos.base.v1beta1.Coin amount = 3 [(gogoproto.nullable) = false];
  repeated lavanet.lava.epochstorage.Endpoint endpoints = 4 [(gogoproto.nullable) = false];
  int32 geolocation = 5;
  reserved 6;
  cosmos.base.v1beta1.Coin delegate_limit = 7 [(gogoproto.nullable) = false];
  uint64 delegate_commission = 8; // delegation commission (precentage 0-100)
  string validator = 9;
  string address = 10;
  cosmos.staking.v1beta1.Description description = 11 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

message MsgStakeProviderResponse {
}

message MsgUnstakeProvider {
  option (amino.name) = "pairing/UnstakeProvider";
  string creator = 1;
  string chainID = 2;
  string validator = 3;
}

message MsgUnstakeProviderResponse {
}

message MsgRelayPayment {
  option (amino.name) = "pairing/RelayPayment";
  reserved 3;
  string creator = 1;
  repeated RelaySession relays = 2;
  string descriptionString = 4;
  repeated LatestBlockReport latest_block_reports =5;
}

message LatestBlockReport {
  string spec_id = 1;
  uint64 latest_block =2;
}

message MsgRelayPaymentResponse {
  bool rejected_relays = 1; // true if there is any relay in the TX that was rejected
}

message MsgFreezeProvider {
  option (amino.name) = "pairing/Freeze";
  string creator = 1;
  repeated string chainIds = 2;
  string reason = 3;
}

message MsgFreezeProviderResponse {
}

message MsgUnfreezeProvider {
  option (amino.name) = "pairing/Unfreeze";
  string creator = 1;
  repeated string chainIds = 2;
}

message MsgUnfreezeProviderResponse {
}


message MsgMoveProviderStake {
  option (amino.name) = "pairing/MoveProviderStake";
  string creator = 1;
  string src_chain =2;
  string dst_chain =3;
  cosmos.base.v1beta1.Coin amount = 4 [(gogoproto.nullable) = false];
}

message MsgMoveProviderStakeResponse {
}

// this line is used by starport scaffolding # proto/tx/message