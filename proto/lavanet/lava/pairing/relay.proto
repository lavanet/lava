syntax = "proto3";
package lavanet.lava.pairing;

option go_package = "github.com/lavanet/lava/v5/x/pairing/types";

import "gogoproto/gogo.proto";
import "google/protobuf/wrappers.proto";
import "google/protobuf/timestamp.proto";
import "lavanet/lava/epochstorage/stake_entry.proto";

service Relayer {
    rpc Relay (RelayRequest) returns (RelayReply) {}
    rpc RelaySubscribe (RelayRequest) returns (stream RelayReply) {}
    rpc Probe (ProbeRequest) returns (ProbeReply) {}
}

message ProbeRequest {
    uint64 guid = 1;
    string spec_id = 2;
    string api_interface = 3;
    bool with_verifications = 4;
}

message ProbeReply {
    uint64 guid =1;
    int64 latest_block = 2;
    bytes finalized_blocks_hashes = 3;
    uint64 lava_epoch = 4;
    uint64 lava_latest_block = 5;
    repeated Verification verifications = 6;
}

message Verification {
    string name = 1;
    bool passed = 2;
}

message RelaySession {
    string spec_id = 1;
    bytes content_hash = 2;
    uint64 session_id = 3;
    uint64 cu_sum = 4; // total compute unit used including this relay
    string provider = 5;
    uint64 relay_num = 6;
    QualityOfServiceReport qos_report = 7;
    int64 epoch = 8;
    repeated ReportedProvider unresponsive_providers = 9; // sdk needs the suffix _list for repeated fields
    string lava_chain_id = 10;
    bytes sig = 11;
    Badge badge = 12;
    QualityOfServiceReport qos_excellence_report = 13;
}

message Badge {
    uint64 cu_allocation =1;
    uint64 epoch = 2;
    string address = 3;
    string lava_chain_id = 4;
    bytes project_sig = 5;
    uint64 virtual_epoch = 6;
}  

message RelayPrivateData {
    string connection_type = 1;
    string api_url = 2; // some relays have associated urls that are filled with params ('/block/{height}')
    bytes data = 3;
    int64 request_block = 4;
    string api_interface = 5;
    bytes salt = 6;
    repeated Metadata metadata = 7 [(gogoproto.nullable)   = false];
    string addon = 8;
    repeated string extensions = 9;
    int64 seen_block = 10;
}

message ReportedProvider {
    string address =1;
    uint64 disconnections =2;
    uint64 errors =3;
    int64 timestamp_s = 4;
}

message Metadata {
    string name = 1;
    string value = 2;
}

message RelayRequest {
    reserved 3;
    RelaySession relay_session = 1;
    RelayPrivateData relay_data= 2;
}

message RelayReply {
    bytes data = 1;
    bytes sig = 2;
    reserved 3;
    int64 latest_block = 4;
    bytes finalized_blocks_hashes = 5;
    bytes sig_blocks = 6;
    repeated Metadata metadata = 7 [(gogoproto.nullable) = false];
}

message QualityOfServiceReport{
    // Latency of provider answers in milliseconds, range 0-inf, lower is better
    string latency = 1 [
        (gogoproto.moretags) = "yaml:\"Latency\"",
        (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
        (gogoproto.nullable)   = false
        ];

    // Percentage of times the provider returned a non-error response, range 0-1, higher is better
    string availability  = 2 [
        (gogoproto.moretags) = "yaml:\"availability\"",
        (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
        (gogoproto.nullable)   = false
        ];

    // Amount of time the provider is not synced (have the latest block) in milliseconds, range 0-inf, lower is better.
    // Example: in ETH we have 15sec block time. So sync = 15000 means that the provider is one block
    // behind the actual latest block.
    string sync = 3 [
        (gogoproto.moretags) = "yaml:\"sync\"",
        (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
        (gogoproto.nullable)   = false
        ];
}

message PairingRelayCache {
    repeated lavanet.lava.epochstorage.StakeEntry entries = 1 [(gogoproto.nullable) = false];
    uint64 allowed_cu = 2;
}