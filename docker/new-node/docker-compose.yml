services:
  lava-node-init:
    # Update with the most recent supported version of lavad
    image: ghcr.io/lavanet/lava/lavad:${LAVAD_VERSION:-latest}
    environment:
      - CHAIN_ID=${CHAIN_ID:-lava}
      - KEYRING_BACKEND=${KEYRING_BACKEND:-test}
      - MONIKER=${MONIKER:-DOCKER_COMPOSE_MONIKER}
    entrypoint: ["sh"]
    command: ["/lava/config/new_node_init.sh"]
    volumes:
      - lava_data:/lava
      - ../common/new_node_init.sh:/lava/config/new_node_init.sh
    networks:
      - lava_network

  lava-node-config:
    image: ghcr.io/tomwright/dasel:v2.7.0
    entrypoint: ["sh", "-c"]
    environment: []
    command: >
      "
      dasel put -f /lava/.lava/config/genesis.json -t string -v ulava 'app_state.gov.params.min_deposit.[0].denom' &&
      dasel put -f /lava/.lava/config/genesis.json -t string -v '100' 'app_state.gov.params.min_deposit.[0].amount' &&
      dasel put -f /lava/.lava/config/genesis.json -t string -v '10s' 'app_state.gov.params.voting_period' &&
      dasel put -f /lava/.lava/config/genesis.json -t string -v '10s' 'app_state.gov.params.expedited_voting_period' &&
      dasel put -f /lava/.lava/config/genesis.json -t string -v 'ulava' 'app_state.gov.params.expedited_min_deposit.[0].denom' &&
      dasel put -f /lava/.lava/config/genesis.json -t string -v '200' 'app_state.gov.params.expedited_min_deposit.[0].amount' &&
      dasel put -f /lava/.lava/config/genesis.json -t string -v '0.67' 'app_state.gov.params.expedited_threshold' &&
      dasel put -f /lava/.lava/config/genesis.json -t string -v 'ulava' 'app_state.mint.params.mint_denom' &&
      dasel put -f /lava/.lava/config/genesis.json -t string -v 'ulava' 'app_state.staking.params.bond_denom' &&
      dasel put -f /lava/.lava/config/genesis.json -t string -v 'ulava' 'app_state.crisis.constant_fee.denom' &&
      dasel put -f /lava/.lava/config/genesis.json -t string -v '5' 'app_state.epochstorage.params.epochsToSave' &&
      dasel put -f /lava/.lava/config/genesis.json -t string -v '4' 'app_state.epochstorage.params.epochBlocks' &&
      dasel put -f /lava/.lava/config/genesis.json -t string -v '0' 'app_state.distribution.params.community_tax' &&
      dasel put -f /lava/.lava/config/genesis.json -t string -v '0' 'app_state.rewards.params.validators_subscription_participation' &&
      dasel put -f /lava/.lava/config/genesis.json -t string -v '1s' 'app_state.downtime.params.downtime_duration' &&

      dasel put -f /lava/.lava/config/config.toml -t string -v 1s 'consensus.timeout_propose' &&
      dasel put -f /lava/.lava/config/config.toml -t string -v 500ms 'consensus.timeout_propose_delta' &&
      dasel put -f /lava/.lava/config/config.toml -t string -v 1s 'consensus.timeout_prevote' &&
      dasel put -f /lava/.lava/config/config.toml -t string -v 500ms 'consensus.timeout_prevote_delta' &&
      dasel put -f /lava/.lava/config/config.toml -t string -v 500ms 'consensus.timeout_precommit' &&
      dasel put -f /lava/.lava/config/config.toml -t string -v 1s 'consensus.timeout_precommit_delta' &&
      dasel put -f /lava/.lava/config/config.toml -t string -v 1s 'consensus.timeout_commit' &&
      dasel put -f /lava/.lava/config/config.toml -t string -v false 'consensus.skip_timeout_commit' &&

      dasel put -f /lava/.lava/config/config.toml -t string -v true 'rosetta.enable' &&
      dasel put -f /lava/.lava/config/config.toml -t string -v \"tcp://0.0.0.0:26657\" 'rpc.laddr' &&
      dasel put -f /lava/.lava/config/app.toml -t string -v \"0.0.0.0:9090\" 'grpc.address' &&
      dasel put -f /lava/.lava/config/app.toml -t string -v \"tcp://0.0.0.0:1317\" 'api.address' &&
      dasel put -f /lava/.lava/config/app.toml -t string -v true 'api.enable'
      "
    volumes:
      - lava_data:/lava
    networks:
      - lava_network
    depends_on:
      lava-node-init:
        condition: service_completed_successfully

  lava-node:
    # Update with the most recent supported version of lavad
    image: ghcr.io/lavanet/lava/lavad:${LAVAD_VERSION:-latest}
    container_name: lava-node
    command: ["start", "--pruning=nothing"]
    ports:
      - "${LAVA_NODE_PORT_API:-1317}:1317"
      - "${LAVA_NODE_PORT_GRPC:-9090}:9090"
      - "${LAVA_NODE_PORT_GRPC_WEB:-9091}:9091"
      - "${LAVA_NODE_PORT_P2P:-26656}:26656"
      - "${LAVA_NODE_PORT_RPC:-26657}:26657"
    volumes:
      - lava_data:/lava
    networks:
      - lava_network
    healthcheck:
      test: ["CMD", "lavad", "status"]
      interval: 10s
      timeout: 30s
      retries: 5
      start_period: 30s
    restart: always
    depends_on:
      lava-node-init:
        condition: service_completed_successfully
      lava-node-config:
        condition: service_completed_successfully

  post-lava-node-init:
    image: ghcr.io/lavanet/lava/lavad:${LAVAD_VERSION:-main}
    entrypoint: ["sh"]
    command: ["/lava/config/post_node_init.sh"]
    volumes:
      - lava_data:/lava
      - ../common/post_node_init.sh:/lava/config/post_node_init.sh
      - ../../specs/:/lava/specs/
      - ../../cookbook/plans/:/lava/cookbook/plans/
    networks:
      - lava_network
    depends_on:
      lava-node:
        condition: service_healthy

volumes:
  lava_data:

networks:
  lava_network:
